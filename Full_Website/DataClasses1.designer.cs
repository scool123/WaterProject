#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Full_Website
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WQ_FOUR")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACTIVITY_TYPE(ACTIVITY_TYPE instance);
    partial void UpdateACTIVITY_TYPE(ACTIVITY_TYPE instance);
    partial void DeleteACTIVITY_TYPE(ACTIVITY_TYPE instance);
    partial void InsertCOUNTy(COUNTy instance);
    partial void UpdateCOUNTy(COUNTy instance);
    partial void DeleteCOUNTy(COUNTy instance);
    partial void InsertMONITORING_LOCATION(MONITORING_LOCATION instance);
    partial void UpdateMONITORING_LOCATION(MONITORING_LOCATION instance);
    partial void DeleteMONITORING_LOCATION(MONITORING_LOCATION instance);
    partial void InsertORGANIZATION(ORGANIZATION instance);
    partial void UpdateORGANIZATION(ORGANIZATION instance);
    partial void DeleteORGANIZATION(ORGANIZATION instance);
    partial void InsertPARAMETER(PARAMETER instance);
    partial void UpdatePARAMETER(PARAMETER instance);
    partial void DeletePARAMETER(PARAMETER instance);
    partial void InsertPROJECT(PROJECT instance);
    partial void UpdatePROJECT(PROJECT instance);
    partial void DeletePROJECT(PROJECT instance);
    partial void InsertPROJECT_MLOCATION(PROJECT_MLOCATION instance);
    partial void UpdatePROJECT_MLOCATION(PROJECT_MLOCATION instance);
    partial void DeletePROJECT_MLOCATION(PROJECT_MLOCATION instance);
    partial void InsertRESULT(RESULT instance);
    partial void UpdateRESULT(RESULT instance);
    partial void DeleteRESULT(RESULT instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WQ_FOURConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACTIVITY_TYPE> ACTIVITY_TYPEs
		{
			get
			{
				return this.GetTable<ACTIVITY_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<COUNTy> COUNTies
		{
			get
			{
				return this.GetTable<COUNTy>();
			}
		}
		
		public System.Data.Linq.Table<MONITORING_LOCATION> MONITORING_LOCATIONs
		{
			get
			{
				return this.GetTable<MONITORING_LOCATION>();
			}
		}
		
		public System.Data.Linq.Table<ORGANIZATION> ORGANIZATIONs
		{
			get
			{
				return this.GetTable<ORGANIZATION>();
			}
		}
		
		public System.Data.Linq.Table<PARAMETER> PARAMETERs
		{
			get
			{
				return this.GetTable<PARAMETER>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT> PROJECTs
		{
			get
			{
				return this.GetTable<PROJECT>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_MLOCATION> PROJECT_MLOCATIONs
		{
			get
			{
				return this.GetTable<PROJECT_MLOCATION>();
			}
		}
		
		public System.Data.Linq.Table<RESULT> RESULTs
		{
			get
			{
				return this.GetTable<RESULT>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spMlocDropDownFromProj")]
		public ISingleResult<spMlocDropDownFromProjResult> spMlocDropDownFromProj([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PRJ_ID", DbType="Int")] System.Nullable<int> pRJ_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pRJ_ID);
			return ((ISingleResult<spMlocDropDownFromProjResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spParamDropDownFromMloc")]
		public ISingleResult<spParamDropDownFromMlocResult> spParamDropDownFromMloc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MLOC_ID", DbType="Int")] System.Nullable<int> mLOC_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mLOC_ID);
			return ((ISingleResult<spParamDropDownFromMlocResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SPGetByMlocParam")]
		public ISingleResult<SPGetByMlocParamResult> SPGetByMlocParam([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MLOC_ID", DbType="Int")] System.Nullable<int> mLOC_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PARAM_ID", DbType="Int")] System.Nullable<int> pARAM_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SRESDATE", DbType="Date")] System.Nullable<System.DateTime> sRESDATE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ERESDATE", DbType="Date")] System.Nullable<System.DateTime> eRESDATE)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mLOC_ID, pARAM_ID, sRESDATE, eRESDATE);
			return ((ISingleResult<SPGetByMlocParamResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spTopTenNoDates")]
		public ISingleResult<spTopTenNoDatesResult> spTopTenNoDates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PRJ_ID", DbType="Int")] System.Nullable<int> pRJ_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MLOC_ID", DbType="Int")] System.Nullable<int> mLOC_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PARAM_ID", DbType="Int")] System.Nullable<int> pARAM_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pRJ_ID, mLOC_ID, pARAM_ID);
			return ((ISingleResult<spTopTenNoDatesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spLowTenNoDates")]
		public ISingleResult<spLowTenNoDatesResult> spLowTenNoDates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PRJ_ID", DbType="Int")] System.Nullable<int> pRJ_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MLOC_ID", DbType="Int")] System.Nullable<int> mLOC_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PARAM_ID", DbType="Int")] System.Nullable<int> pARAM_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pRJ_ID, mLOC_ID, pARAM_ID);
			return ((ISingleResult<spLowTenNoDatesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spNeedUnit")]
		public ISingleResult<spNeedUnitResult> spNeedUnit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PARAM_ID", DbType="Int")] System.Nullable<int> pARAM_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pARAM_ID);
			return ((ISingleResult<spNeedUnitResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAVGNNoDates")]
		public ISingleResult<spAVGNNoDatesResult> spAVGNNoDates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PRJ_ID", DbType="Int")] System.Nullable<int> pRJ_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MLOC_ID", DbType="Int")] System.Nullable<int> mLOC_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PARAM_ID", DbType="Int")] System.Nullable<int> pARAM_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pRJ_ID, mLOC_ID, pARAM_ID);
			return ((ISingleResult<spAVGNNoDatesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spLowTenWithDates")]
		public ISingleResult<spLowTenWithDatesResult> spLowTenWithDates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PRJ_ID", DbType="Int")] System.Nullable<int> pRJ_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MLOC_ID", DbType="Int")] System.Nullable<int> mLOC_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PARAM_ID", DbType="Int")] System.Nullable<int> pARAM_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SRESDATE", DbType="Date")] System.Nullable<System.DateTime> sRESDATE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ERESDATE", DbType="Date")] System.Nullable<System.DateTime> eRESDATE)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pRJ_ID, mLOC_ID, pARAM_ID, sRESDATE, eRESDATE);
			return ((ISingleResult<spLowTenWithDatesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spTopTenWithDates")]
		public ISingleResult<spTopTenWithDatesResult> spTopTenWithDates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PRJ_ID", DbType="Int")] System.Nullable<int> pRJ_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MLOC_ID", DbType="Int")] System.Nullable<int> mLOC_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PARAM_ID", DbType="Int")] System.Nullable<int> pARAM_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SRESDATE", DbType="Date")] System.Nullable<System.DateTime> sRESDATE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ERESDATE", DbType="Date")] System.Nullable<System.DateTime> eRESDATE)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pRJ_ID, mLOC_ID, pARAM_ID, sRESDATE, eRESDATE);
			return ((ISingleResult<spTopTenWithDatesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACTIVITY_TYPE")]
	public partial class ACTIVITY_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ACT_TYPE_ID;
		
		private string _ACT_TYPE_NAME;
		
		private string _ACT_MEDIA;
		
		private EntitySet<RESULT> _RESULTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACT_TYPE_IDChanging(int value);
    partial void OnACT_TYPE_IDChanged();
    partial void OnACT_TYPE_NAMEChanging(string value);
    partial void OnACT_TYPE_NAMEChanged();
    partial void OnACT_MEDIAChanging(string value);
    partial void OnACT_MEDIAChanged();
    #endregion
		
		public ACTIVITY_TYPE()
		{
			this._RESULTs = new EntitySet<RESULT>(new Action<RESULT>(this.attach_RESULTs), new Action<RESULT>(this.detach_RESULTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACT_TYPE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ACT_TYPE_ID
		{
			get
			{
				return this._ACT_TYPE_ID;
			}
			set
			{
				if ((this._ACT_TYPE_ID != value))
				{
					this.OnACT_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._ACT_TYPE_ID = value;
					this.SendPropertyChanged("ACT_TYPE_ID");
					this.OnACT_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACT_TYPE_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ACT_TYPE_NAME
		{
			get
			{
				return this._ACT_TYPE_NAME;
			}
			set
			{
				if ((this._ACT_TYPE_NAME != value))
				{
					this.OnACT_TYPE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._ACT_TYPE_NAME = value;
					this.SendPropertyChanged("ACT_TYPE_NAME");
					this.OnACT_TYPE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACT_MEDIA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ACT_MEDIA
		{
			get
			{
				return this._ACT_MEDIA;
			}
			set
			{
				if ((this._ACT_MEDIA != value))
				{
					this.OnACT_MEDIAChanging(value);
					this.SendPropertyChanging();
					this._ACT_MEDIA = value;
					this.SendPropertyChanged("ACT_MEDIA");
					this.OnACT_MEDIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACTIVITY_TYPE_RESULT", Storage="_RESULTs", ThisKey="ACT_TYPE_ID", OtherKey="ACT_TYPE_ID")]
		public EntitySet<RESULT> RESULTs
		{
			get
			{
				return this._RESULTs;
			}
			set
			{
				this._RESULTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RESULTs(RESULT entity)
		{
			this.SendPropertyChanging();
			entity.ACTIVITY_TYPE = this;
		}
		
		private void detach_RESULTs(RESULT entity)
		{
			this.SendPropertyChanging();
			entity.ACTIVITY_TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COUNTIES")]
	public partial class COUNTy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COUNTY_ID;
		
		private string _COUNTY1;
		
		private string _STATE;
		
		private string _COUNTRY;
		
		private EntitySet<MONITORING_LOCATION> _MONITORING_LOCATIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOUNTY_IDChanging(int value);
    partial void OnCOUNTY_IDChanged();
    partial void OnCOUNTY1Changing(string value);
    partial void OnCOUNTY1Changed();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnCOUNTRYChanging(string value);
    partial void OnCOUNTRYChanged();
    #endregion
		
		public COUNTy()
		{
			this._MONITORING_LOCATIONs = new EntitySet<MONITORING_LOCATION>(new Action<MONITORING_LOCATION>(this.attach_MONITORING_LOCATIONs), new Action<MONITORING_LOCATION>(this.detach_MONITORING_LOCATIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTY_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COUNTY_ID
		{
			get
			{
				return this._COUNTY_ID;
			}
			set
			{
				if ((this._COUNTY_ID != value))
				{
					this.OnCOUNTY_IDChanging(value);
					this.SendPropertyChanging();
					this._COUNTY_ID = value;
					this.SendPropertyChanged("COUNTY_ID");
					this.OnCOUNTY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="COUNTY", Storage="_COUNTY1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string COUNTY1
		{
			get
			{
				return this._COUNTY1;
			}
			set
			{
				if ((this._COUNTY1 != value))
				{
					this.OnCOUNTY1Changing(value);
					this.SendPropertyChanging();
					this._COUNTY1 = value;
					this.SendPropertyChanged("COUNTY1");
					this.OnCOUNTY1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					this.OnCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY = value;
					this.SendPropertyChanged("COUNTRY");
					this.OnCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTy_MONITORING_LOCATION", Storage="_MONITORING_LOCATIONs", ThisKey="COUNTY_ID", OtherKey="COUNTY_ID")]
		public EntitySet<MONITORING_LOCATION> MONITORING_LOCATIONs
		{
			get
			{
				return this._MONITORING_LOCATIONs;
			}
			set
			{
				this._MONITORING_LOCATIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MONITORING_LOCATIONs(MONITORING_LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.COUNTy = this;
		}
		
		private void detach_MONITORING_LOCATIONs(MONITORING_LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.COUNTy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONITORING_LOCATION")]
	public partial class MONITORING_LOCATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MLOC_ID;
		
		private string _MLOC_NAME;
		
		private decimal _MLOC_LAT;
		
		private System.Nullable<decimal> _MLOC_LONG;
		
		private int _COUNTY_ID;
		
		private string _WATERBODY;
		
		private EntitySet<PROJECT_MLOCATION> _PROJECT_MLOCATIONs;
		
		private EntitySet<RESULT> _RESULTs;
		
		private EntityRef<COUNTy> _COUNTy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMLOC_IDChanging(int value);
    partial void OnMLOC_IDChanged();
    partial void OnMLOC_NAMEChanging(string value);
    partial void OnMLOC_NAMEChanged();
    partial void OnMLOC_LATChanging(decimal value);
    partial void OnMLOC_LATChanged();
    partial void OnMLOC_LONGChanging(System.Nullable<decimal> value);
    partial void OnMLOC_LONGChanged();
    partial void OnCOUNTY_IDChanging(int value);
    partial void OnCOUNTY_IDChanged();
    partial void OnWATERBODYChanging(string value);
    partial void OnWATERBODYChanged();
    #endregion
		
		public MONITORING_LOCATION()
		{
			this._PROJECT_MLOCATIONs = new EntitySet<PROJECT_MLOCATION>(new Action<PROJECT_MLOCATION>(this.attach_PROJECT_MLOCATIONs), new Action<PROJECT_MLOCATION>(this.detach_PROJECT_MLOCATIONs));
			this._RESULTs = new EntitySet<RESULT>(new Action<RESULT>(this.attach_RESULTs), new Action<RESULT>(this.detach_RESULTs));
			this._COUNTy = default(EntityRef<COUNTy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MLOC_ID
		{
			get
			{
				return this._MLOC_ID;
			}
			set
			{
				if ((this._MLOC_ID != value))
				{
					this.OnMLOC_IDChanging(value);
					this.SendPropertyChanging();
					this._MLOC_ID = value;
					this.SendPropertyChanged("MLOC_ID");
					this.OnMLOC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MLOC_NAME
		{
			get
			{
				return this._MLOC_NAME;
			}
			set
			{
				if ((this._MLOC_NAME != value))
				{
					this.OnMLOC_NAMEChanging(value);
					this.SendPropertyChanging();
					this._MLOC_NAME = value;
					this.SendPropertyChanged("MLOC_NAME");
					this.OnMLOC_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_LAT", DbType="Decimal(18,10) NOT NULL")]
		public decimal MLOC_LAT
		{
			get
			{
				return this._MLOC_LAT;
			}
			set
			{
				if ((this._MLOC_LAT != value))
				{
					this.OnMLOC_LATChanging(value);
					this.SendPropertyChanging();
					this._MLOC_LAT = value;
					this.SendPropertyChanged("MLOC_LAT");
					this.OnMLOC_LATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_LONG", DbType="Decimal(18,10)")]
		public System.Nullable<decimal> MLOC_LONG
		{
			get
			{
				return this._MLOC_LONG;
			}
			set
			{
				if ((this._MLOC_LONG != value))
				{
					this.OnMLOC_LONGChanging(value);
					this.SendPropertyChanging();
					this._MLOC_LONG = value;
					this.SendPropertyChanged("MLOC_LONG");
					this.OnMLOC_LONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTY_ID", DbType="Int NOT NULL")]
		public int COUNTY_ID
		{
			get
			{
				return this._COUNTY_ID;
			}
			set
			{
				if ((this._COUNTY_ID != value))
				{
					if (this._COUNTy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOUNTY_IDChanging(value);
					this.SendPropertyChanging();
					this._COUNTY_ID = value;
					this.SendPropertyChanged("COUNTY_ID");
					this.OnCOUNTY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WATERBODY", DbType="VarChar(50)")]
		public string WATERBODY
		{
			get
			{
				return this._WATERBODY;
			}
			set
			{
				if ((this._WATERBODY != value))
				{
					this.OnWATERBODYChanging(value);
					this.SendPropertyChanging();
					this._WATERBODY = value;
					this.SendPropertyChanged("WATERBODY");
					this.OnWATERBODYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONITORING_LOCATION_PROJECT_MLOCATION", Storage="_PROJECT_MLOCATIONs", ThisKey="MLOC_ID", OtherKey="MLOC_ID")]
		public EntitySet<PROJECT_MLOCATION> PROJECT_MLOCATIONs
		{
			get
			{
				return this._PROJECT_MLOCATIONs;
			}
			set
			{
				this._PROJECT_MLOCATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONITORING_LOCATION_RESULT", Storage="_RESULTs", ThisKey="MLOC_ID", OtherKey="MLOC_ID")]
		public EntitySet<RESULT> RESULTs
		{
			get
			{
				return this._RESULTs;
			}
			set
			{
				this._RESULTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTy_MONITORING_LOCATION", Storage="_COUNTy", ThisKey="COUNTY_ID", OtherKey="COUNTY_ID", IsForeignKey=true)]
		public COUNTy COUNTy
		{
			get
			{
				return this._COUNTy.Entity;
			}
			set
			{
				COUNTy previousValue = this._COUNTy.Entity;
				if (((previousValue != value) 
							|| (this._COUNTy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTy.Entity = null;
						previousValue.MONITORING_LOCATIONs.Remove(this);
					}
					this._COUNTy.Entity = value;
					if ((value != null))
					{
						value.MONITORING_LOCATIONs.Add(this);
						this._COUNTY_ID = value.COUNTY_ID;
					}
					else
					{
						this._COUNTY_ID = default(int);
					}
					this.SendPropertyChanged("COUNTy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROJECT_MLOCATIONs(PROJECT_MLOCATION entity)
		{
			this.SendPropertyChanging();
			entity.MONITORING_LOCATION = this;
		}
		
		private void detach_PROJECT_MLOCATIONs(PROJECT_MLOCATION entity)
		{
			this.SendPropertyChanging();
			entity.MONITORING_LOCATION = null;
		}
		
		private void attach_RESULTs(RESULT entity)
		{
			this.SendPropertyChanging();
			entity.MONITORING_LOCATION = this;
		}
		
		private void detach_RESULTs(RESULT entity)
		{
			this.SendPropertyChanging();
			entity.MONITORING_LOCATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORGANIZATION")]
	public partial class ORGANIZATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ORG_ID;
		
		private string _ORG_NAME;
		
		private string _ORG_TYPE;
		
		private EntitySet<PROJECT> _PROJECTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnORG_IDChanging(int value);
    partial void OnORG_IDChanged();
    partial void OnORG_NAMEChanging(string value);
    partial void OnORG_NAMEChanged();
    partial void OnORG_TYPEChanging(string value);
    partial void OnORG_TYPEChanged();
    #endregion
		
		public ORGANIZATION()
		{
			this._PROJECTs = new EntitySet<PROJECT>(new Action<PROJECT>(this.attach_PROJECTs), new Action<PROJECT>(this.detach_PROJECTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORG_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ORG_ID
		{
			get
			{
				return this._ORG_ID;
			}
			set
			{
				if ((this._ORG_ID != value))
				{
					this.OnORG_IDChanging(value);
					this.SendPropertyChanging();
					this._ORG_ID = value;
					this.SendPropertyChanged("ORG_ID");
					this.OnORG_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORG_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ORG_NAME
		{
			get
			{
				return this._ORG_NAME;
			}
			set
			{
				if ((this._ORG_NAME != value))
				{
					this.OnORG_NAMEChanging(value);
					this.SendPropertyChanging();
					this._ORG_NAME = value;
					this.SendPropertyChanged("ORG_NAME");
					this.OnORG_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORG_TYPE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ORG_TYPE
		{
			get
			{
				return this._ORG_TYPE;
			}
			set
			{
				if ((this._ORG_TYPE != value))
				{
					this.OnORG_TYPEChanging(value);
					this.SendPropertyChanging();
					this._ORG_TYPE = value;
					this.SendPropertyChanged("ORG_TYPE");
					this.OnORG_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORGANIZATION_PROJECT", Storage="_PROJECTs", ThisKey="ORG_ID", OtherKey="ORG_ID")]
		public EntitySet<PROJECT> PROJECTs
		{
			get
			{
				return this._PROJECTs;
			}
			set
			{
				this._PROJECTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.ORGANIZATION = this;
		}
		
		private void detach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.ORGANIZATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PARAMETERS")]
	public partial class PARAMETER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PARAM_ID;
		
		private string _PARAM_NAME;
		
		private string _UNIT;
		
		private EntitySet<RESULT> _RESULTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPARAM_IDChanging(int value);
    partial void OnPARAM_IDChanged();
    partial void OnPARAM_NAMEChanging(string value);
    partial void OnPARAM_NAMEChanged();
    partial void OnUNITChanging(string value);
    partial void OnUNITChanged();
    #endregion
		
		public PARAMETER()
		{
			this._RESULTs = new EntitySet<RESULT>(new Action<RESULT>(this.attach_RESULTs), new Action<RESULT>(this.detach_RESULTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PARAM_ID
		{
			get
			{
				return this._PARAM_ID;
			}
			set
			{
				if ((this._PARAM_ID != value))
				{
					this.OnPARAM_IDChanging(value);
					this.SendPropertyChanging();
					this._PARAM_ID = value;
					this.SendPropertyChanged("PARAM_ID");
					this.OnPARAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PARAM_NAME
		{
			get
			{
				return this._PARAM_NAME;
			}
			set
			{
				if ((this._PARAM_NAME != value))
				{
					this.OnPARAM_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PARAM_NAME = value;
					this.SendPropertyChanged("PARAM_NAME");
					this.OnPARAM_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this.OnUNITChanging(value);
					this.SendPropertyChanging();
					this._UNIT = value;
					this.SendPropertyChanged("UNIT");
					this.OnUNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARAMETER_RESULT", Storage="_RESULTs", ThisKey="PARAM_ID", OtherKey="PARAM_ID")]
		public EntitySet<RESULT> RESULTs
		{
			get
			{
				return this._RESULTs;
			}
			set
			{
				this._RESULTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RESULTs(RESULT entity)
		{
			this.SendPropertyChanging();
			entity.PARAMETER = this;
		}
		
		private void detach_RESULTs(RESULT entity)
		{
			this.SendPropertyChanging();
			entity.PARAMETER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROJECT")]
	public partial class PROJECT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRJ_ID;
		
		private string _PRJ_NAME;
		
		private int _ORG_ID;
		
		private EntitySet<PROJECT_MLOCATION> _PROJECT_MLOCATIONs;
		
		private EntityRef<ORGANIZATION> _ORGANIZATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRJ_IDChanging(int value);
    partial void OnPRJ_IDChanged();
    partial void OnPRJ_NAMEChanging(string value);
    partial void OnPRJ_NAMEChanged();
    partial void OnORG_IDChanging(int value);
    partial void OnORG_IDChanged();
    #endregion
		
		public PROJECT()
		{
			this._PROJECT_MLOCATIONs = new EntitySet<PROJECT_MLOCATION>(new Action<PROJECT_MLOCATION>(this.attach_PROJECT_MLOCATIONs), new Action<PROJECT_MLOCATION>(this.detach_PROJECT_MLOCATIONs));
			this._ORGANIZATION = default(EntityRef<ORGANIZATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRJ_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PRJ_ID
		{
			get
			{
				return this._PRJ_ID;
			}
			set
			{
				if ((this._PRJ_ID != value))
				{
					this.OnPRJ_IDChanging(value);
					this.SendPropertyChanging();
					this._PRJ_ID = value;
					this.SendPropertyChanged("PRJ_ID");
					this.OnPRJ_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRJ_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRJ_NAME
		{
			get
			{
				return this._PRJ_NAME;
			}
			set
			{
				if ((this._PRJ_NAME != value))
				{
					this.OnPRJ_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PRJ_NAME = value;
					this.SendPropertyChanged("PRJ_NAME");
					this.OnPRJ_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORG_ID", DbType="Int NOT NULL")]
		public int ORG_ID
		{
			get
			{
				return this._ORG_ID;
			}
			set
			{
				if ((this._ORG_ID != value))
				{
					if (this._ORGANIZATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORG_IDChanging(value);
					this.SendPropertyChanging();
					this._ORG_ID = value;
					this.SendPropertyChanged("ORG_ID");
					this.OnORG_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROJECT_PROJECT_MLOCATION", Storage="_PROJECT_MLOCATIONs", ThisKey="PRJ_ID", OtherKey="PRJ_ID")]
		public EntitySet<PROJECT_MLOCATION> PROJECT_MLOCATIONs
		{
			get
			{
				return this._PROJECT_MLOCATIONs;
			}
			set
			{
				this._PROJECT_MLOCATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORGANIZATION_PROJECT", Storage="_ORGANIZATION", ThisKey="ORG_ID", OtherKey="ORG_ID", IsForeignKey=true)]
		public ORGANIZATION ORGANIZATION
		{
			get
			{
				return this._ORGANIZATION.Entity;
			}
			set
			{
				ORGANIZATION previousValue = this._ORGANIZATION.Entity;
				if (((previousValue != value) 
							|| (this._ORGANIZATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORGANIZATION.Entity = null;
						previousValue.PROJECTs.Remove(this);
					}
					this._ORGANIZATION.Entity = value;
					if ((value != null))
					{
						value.PROJECTs.Add(this);
						this._ORG_ID = value.ORG_ID;
					}
					else
					{
						this._ORG_ID = default(int);
					}
					this.SendPropertyChanged("ORGANIZATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROJECT_MLOCATIONs(PROJECT_MLOCATION entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT = this;
		}
		
		private void detach_PROJECT_MLOCATIONs(PROJECT_MLOCATION entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROJECT_MLOCATION")]
	public partial class PROJECT_MLOCATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PML_ID;
		
		private int _PRJ_ID;
		
		private int _MLOC_ID;
		
		private EntityRef<MONITORING_LOCATION> _MONITORING_LOCATION;
		
		private EntityRef<PROJECT> _PROJECT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPML_IDChanging(int value);
    partial void OnPML_IDChanged();
    partial void OnPRJ_IDChanging(int value);
    partial void OnPRJ_IDChanged();
    partial void OnMLOC_IDChanging(int value);
    partial void OnMLOC_IDChanged();
    #endregion
		
		public PROJECT_MLOCATION()
		{
			this._MONITORING_LOCATION = default(EntityRef<MONITORING_LOCATION>);
			this._PROJECT = default(EntityRef<PROJECT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PML_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PML_ID
		{
			get
			{
				return this._PML_ID;
			}
			set
			{
				if ((this._PML_ID != value))
				{
					this.OnPML_IDChanging(value);
					this.SendPropertyChanging();
					this._PML_ID = value;
					this.SendPropertyChanged("PML_ID");
					this.OnPML_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRJ_ID", DbType="Int NOT NULL")]
		public int PRJ_ID
		{
			get
			{
				return this._PRJ_ID;
			}
			set
			{
				if ((this._PRJ_ID != value))
				{
					if (this._PROJECT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRJ_IDChanging(value);
					this.SendPropertyChanging();
					this._PRJ_ID = value;
					this.SendPropertyChanged("PRJ_ID");
					this.OnPRJ_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_ID", DbType="Int NOT NULL")]
		public int MLOC_ID
		{
			get
			{
				return this._MLOC_ID;
			}
			set
			{
				if ((this._MLOC_ID != value))
				{
					if (this._MONITORING_LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMLOC_IDChanging(value);
					this.SendPropertyChanging();
					this._MLOC_ID = value;
					this.SendPropertyChanged("MLOC_ID");
					this.OnMLOC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONITORING_LOCATION_PROJECT_MLOCATION", Storage="_MONITORING_LOCATION", ThisKey="MLOC_ID", OtherKey="MLOC_ID", IsForeignKey=true)]
		public MONITORING_LOCATION MONITORING_LOCATION
		{
			get
			{
				return this._MONITORING_LOCATION.Entity;
			}
			set
			{
				MONITORING_LOCATION previousValue = this._MONITORING_LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._MONITORING_LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONITORING_LOCATION.Entity = null;
						previousValue.PROJECT_MLOCATIONs.Remove(this);
					}
					this._MONITORING_LOCATION.Entity = value;
					if ((value != null))
					{
						value.PROJECT_MLOCATIONs.Add(this);
						this._MLOC_ID = value.MLOC_ID;
					}
					else
					{
						this._MLOC_ID = default(int);
					}
					this.SendPropertyChanged("MONITORING_LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROJECT_PROJECT_MLOCATION", Storage="_PROJECT", ThisKey="PRJ_ID", OtherKey="PRJ_ID", IsForeignKey=true)]
		public PROJECT PROJECT
		{
			get
			{
				return this._PROJECT.Entity;
			}
			set
			{
				PROJECT previousValue = this._PROJECT.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT.Entity = null;
						previousValue.PROJECT_MLOCATIONs.Remove(this);
					}
					this._PROJECT.Entity = value;
					if ((value != null))
					{
						value.PROJECT_MLOCATIONs.Add(this);
						this._PRJ_ID = value.PRJ_ID;
					}
					else
					{
						this._PRJ_ID = default(int);
					}
					this.SendPropertyChanged("PROJECT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RESULTS")]
	public partial class RESULT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RES_ID;
		
		private decimal _RES_MEASURE;
		
		private int _PARAM_ID;
		
		private System.DateTime _RES_DATE_TIME;
		
		private System.DateTime _RES_DATE;
		
		private int _MLOC_ID;
		
		private int _ACT_TYPE_ID;
		
		private EntityRef<ACTIVITY_TYPE> _ACTIVITY_TYPE;
		
		private EntityRef<MONITORING_LOCATION> _MONITORING_LOCATION;
		
		private EntityRef<PARAMETER> _PARAMETER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRES_IDChanging(long value);
    partial void OnRES_IDChanged();
    partial void OnRES_MEASUREChanging(decimal value);
    partial void OnRES_MEASUREChanged();
    partial void OnPARAM_IDChanging(int value);
    partial void OnPARAM_IDChanged();
    partial void OnRES_DATE_TIMEChanging(System.DateTime value);
    partial void OnRES_DATE_TIMEChanged();
    partial void OnRES_DATEChanging(System.DateTime value);
    partial void OnRES_DATEChanged();
    partial void OnMLOC_IDChanging(int value);
    partial void OnMLOC_IDChanged();
    partial void OnACT_TYPE_IDChanging(int value);
    partial void OnACT_TYPE_IDChanged();
    #endregion
		
		public RESULT()
		{
			this._ACTIVITY_TYPE = default(EntityRef<ACTIVITY_TYPE>);
			this._MONITORING_LOCATION = default(EntityRef<MONITORING_LOCATION>);
			this._PARAMETER = default(EntityRef<PARAMETER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long RES_ID
		{
			get
			{
				return this._RES_ID;
			}
			set
			{
				if ((this._RES_ID != value))
				{
					this.OnRES_IDChanging(value);
					this.SendPropertyChanging();
					this._RES_ID = value;
					this.SendPropertyChanged("RES_ID");
					this.OnRES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_MEASURE", DbType="Decimal(20,10) NOT NULL")]
		public decimal RES_MEASURE
		{
			get
			{
				return this._RES_MEASURE;
			}
			set
			{
				if ((this._RES_MEASURE != value))
				{
					this.OnRES_MEASUREChanging(value);
					this.SendPropertyChanging();
					this._RES_MEASURE = value;
					this.SendPropertyChanged("RES_MEASURE");
					this.OnRES_MEASUREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_ID", DbType="Int NOT NULL")]
		public int PARAM_ID
		{
			get
			{
				return this._PARAM_ID;
			}
			set
			{
				if ((this._PARAM_ID != value))
				{
					if (this._PARAMETER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPARAM_IDChanging(value);
					this.SendPropertyChanging();
					this._PARAM_ID = value;
					this.SendPropertyChanged("PARAM_ID");
					this.OnPARAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_DATE_TIME", DbType="DateTime2 NOT NULL")]
		public System.DateTime RES_DATE_TIME
		{
			get
			{
				return this._RES_DATE_TIME;
			}
			set
			{
				if ((this._RES_DATE_TIME != value))
				{
					this.OnRES_DATE_TIMEChanging(value);
					this.SendPropertyChanging();
					this._RES_DATE_TIME = value;
					this.SendPropertyChanged("RES_DATE_TIME");
					this.OnRES_DATE_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_DATE", DbType="Date NOT NULL")]
		public System.DateTime RES_DATE
		{
			get
			{
				return this._RES_DATE;
			}
			set
			{
				if ((this._RES_DATE != value))
				{
					this.OnRES_DATEChanging(value);
					this.SendPropertyChanging();
					this._RES_DATE = value;
					this.SendPropertyChanged("RES_DATE");
					this.OnRES_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_ID", DbType="Int NOT NULL")]
		public int MLOC_ID
		{
			get
			{
				return this._MLOC_ID;
			}
			set
			{
				if ((this._MLOC_ID != value))
				{
					if (this._MONITORING_LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMLOC_IDChanging(value);
					this.SendPropertyChanging();
					this._MLOC_ID = value;
					this.SendPropertyChanged("MLOC_ID");
					this.OnMLOC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACT_TYPE_ID", DbType="Int NOT NULL")]
		public int ACT_TYPE_ID
		{
			get
			{
				return this._ACT_TYPE_ID;
			}
			set
			{
				if ((this._ACT_TYPE_ID != value))
				{
					if (this._ACTIVITY_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACT_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._ACT_TYPE_ID = value;
					this.SendPropertyChanged("ACT_TYPE_ID");
					this.OnACT_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACTIVITY_TYPE_RESULT", Storage="_ACTIVITY_TYPE", ThisKey="ACT_TYPE_ID", OtherKey="ACT_TYPE_ID", IsForeignKey=true)]
		public ACTIVITY_TYPE ACTIVITY_TYPE
		{
			get
			{
				return this._ACTIVITY_TYPE.Entity;
			}
			set
			{
				ACTIVITY_TYPE previousValue = this._ACTIVITY_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._ACTIVITY_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACTIVITY_TYPE.Entity = null;
						previousValue.RESULTs.Remove(this);
					}
					this._ACTIVITY_TYPE.Entity = value;
					if ((value != null))
					{
						value.RESULTs.Add(this);
						this._ACT_TYPE_ID = value.ACT_TYPE_ID;
					}
					else
					{
						this._ACT_TYPE_ID = default(int);
					}
					this.SendPropertyChanged("ACTIVITY_TYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONITORING_LOCATION_RESULT", Storage="_MONITORING_LOCATION", ThisKey="MLOC_ID", OtherKey="MLOC_ID", IsForeignKey=true)]
		public MONITORING_LOCATION MONITORING_LOCATION
		{
			get
			{
				return this._MONITORING_LOCATION.Entity;
			}
			set
			{
				MONITORING_LOCATION previousValue = this._MONITORING_LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._MONITORING_LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONITORING_LOCATION.Entity = null;
						previousValue.RESULTs.Remove(this);
					}
					this._MONITORING_LOCATION.Entity = value;
					if ((value != null))
					{
						value.RESULTs.Add(this);
						this._MLOC_ID = value.MLOC_ID;
					}
					else
					{
						this._MLOC_ID = default(int);
					}
					this.SendPropertyChanged("MONITORING_LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARAMETER_RESULT", Storage="_PARAMETER", ThisKey="PARAM_ID", OtherKey="PARAM_ID", IsForeignKey=true)]
		public PARAMETER PARAMETER
		{
			get
			{
				return this._PARAMETER.Entity;
			}
			set
			{
				PARAMETER previousValue = this._PARAMETER.Entity;
				if (((previousValue != value) 
							|| (this._PARAMETER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PARAMETER.Entity = null;
						previousValue.RESULTs.Remove(this);
					}
					this._PARAMETER.Entity = value;
					if ((value != null))
					{
						value.RESULTs.Add(this);
						this._PARAM_ID = value.PARAM_ID;
					}
					else
					{
						this._PARAM_ID = default(int);
					}
					this.SendPropertyChanged("PARAMETER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class spMlocDropDownFromProjResult
	{
		
		private int _MLOC_ID;
		
		private string _MLOC_NAME;
		
		public spMlocDropDownFromProjResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_ID", DbType="Int NOT NULL")]
		public int MLOC_ID
		{
			get
			{
				return this._MLOC_ID;
			}
			set
			{
				if ((this._MLOC_ID != value))
				{
					this._MLOC_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MLOC_NAME
		{
			get
			{
				return this._MLOC_NAME;
			}
			set
			{
				if ((this._MLOC_NAME != value))
				{
					this._MLOC_NAME = value;
				}
			}
		}
	}
	
	public partial class spParamDropDownFromMlocResult
	{
		
		private string _PARAM_NAME;
		
		private int _PARAM_ID;
		
		public spParamDropDownFromMlocResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PARAM_NAME
		{
			get
			{
				return this._PARAM_NAME;
			}
			set
			{
				if ((this._PARAM_NAME != value))
				{
					this._PARAM_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_ID", DbType="Int NOT NULL")]
		public int PARAM_ID
		{
			get
			{
				return this._PARAM_ID;
			}
			set
			{
				if ((this._PARAM_ID != value))
				{
					this._PARAM_ID = value;
				}
			}
		}
	}
	
	public partial class SPGetByMlocParamResult
	{
		
		private decimal _RES_MEASURE;
		
		private string _UNIT;
		
		private string _PARAM_NAME;
		
		private System.DateTime _RES_DATE_TIME;
		
		private string _MLOC_NAME;
		
		private string _PRJ_NAME;
		
		public SPGetByMlocParamResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_MEASURE", DbType="Decimal(20,10) NOT NULL")]
		public decimal RES_MEASURE
		{
			get
			{
				return this._RES_MEASURE;
			}
			set
			{
				if ((this._RES_MEASURE != value))
				{
					this._RES_MEASURE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this._UNIT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PARAM_NAME
		{
			get
			{
				return this._PARAM_NAME;
			}
			set
			{
				if ((this._PARAM_NAME != value))
				{
					this._PARAM_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_DATE_TIME", DbType="DateTime2 NOT NULL")]
		public System.DateTime RES_DATE_TIME
		{
			get
			{
				return this._RES_DATE_TIME;
			}
			set
			{
				if ((this._RES_DATE_TIME != value))
				{
					this._RES_DATE_TIME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MLOC_NAME
		{
			get
			{
				return this._MLOC_NAME;
			}
			set
			{
				if ((this._MLOC_NAME != value))
				{
					this._MLOC_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRJ_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRJ_NAME
		{
			get
			{
				return this._PRJ_NAME;
			}
			set
			{
				if ((this._PRJ_NAME != value))
				{
					this._PRJ_NAME = value;
				}
			}
		}
	}
	
	public partial class spTopTenNoDatesResult
	{
		
		private decimal _RES_MEASURE;
		
		private string _UNIT;
		
		private string _PARAM_NAME;
		
		private System.DateTime _RES_DATE_TIME;
		
		private string _MLOC_NAME;
		
		private string _PRJ_NAME;
		
		public spTopTenNoDatesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_MEASURE", DbType="Decimal(20,10) NOT NULL")]
		public decimal RES_MEASURE
		{
			get
			{
				return this._RES_MEASURE;
			}
			set
			{
				if ((this._RES_MEASURE != value))
				{
					this._RES_MEASURE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this._UNIT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PARAM_NAME
		{
			get
			{
				return this._PARAM_NAME;
			}
			set
			{
				if ((this._PARAM_NAME != value))
				{
					this._PARAM_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_DATE_TIME", DbType="DateTime2 NOT NULL")]
		public System.DateTime RES_DATE_TIME
		{
			get
			{
				return this._RES_DATE_TIME;
			}
			set
			{
				if ((this._RES_DATE_TIME != value))
				{
					this._RES_DATE_TIME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MLOC_NAME
		{
			get
			{
				return this._MLOC_NAME;
			}
			set
			{
				if ((this._MLOC_NAME != value))
				{
					this._MLOC_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRJ_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRJ_NAME
		{
			get
			{
				return this._PRJ_NAME;
			}
			set
			{
				if ((this._PRJ_NAME != value))
				{
					this._PRJ_NAME = value;
				}
			}
		}
	}
	
	public partial class spLowTenNoDatesResult
	{
		
		private decimal _RES_MEASURE;
		
		private string _UNIT;
		
		private string _PARAM_NAME;
		
		private System.DateTime _RES_DATE_TIME;
		
		private string _MLOC_NAME;
		
		private string _PRJ_NAME;
		
		public spLowTenNoDatesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_MEASURE", DbType="Decimal(20,10) NOT NULL")]
		public decimal RES_MEASURE
		{
			get
			{
				return this._RES_MEASURE;
			}
			set
			{
				if ((this._RES_MEASURE != value))
				{
					this._RES_MEASURE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this._UNIT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PARAM_NAME
		{
			get
			{
				return this._PARAM_NAME;
			}
			set
			{
				if ((this._PARAM_NAME != value))
				{
					this._PARAM_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_DATE_TIME", DbType="DateTime2 NOT NULL")]
		public System.DateTime RES_DATE_TIME
		{
			get
			{
				return this._RES_DATE_TIME;
			}
			set
			{
				if ((this._RES_DATE_TIME != value))
				{
					this._RES_DATE_TIME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MLOC_NAME
		{
			get
			{
				return this._MLOC_NAME;
			}
			set
			{
				if ((this._MLOC_NAME != value))
				{
					this._MLOC_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRJ_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRJ_NAME
		{
			get
			{
				return this._PRJ_NAME;
			}
			set
			{
				if ((this._PRJ_NAME != value))
				{
					this._PRJ_NAME = value;
				}
			}
		}
	}
	
	public partial class spNeedUnitResult
	{
		
		private string _UNIT;
		
		public spNeedUnitResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this._UNIT = value;
				}
			}
		}
	}
	
	public partial class spAVGNNoDatesResult
	{
		
		private System.Nullable<decimal> _Average_Measurement;
		
		private string _PARAM_NAME;
		
		private string _UNIT;
		
		private string _MLOC_NAME;
		
		public spAVGNNoDatesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Average Measurement]", Storage="_Average_Measurement", DbType="Decimal(38,10)")]
		public System.Nullable<decimal> Average_Measurement
		{
			get
			{
				return this._Average_Measurement;
			}
			set
			{
				if ((this._Average_Measurement != value))
				{
					this._Average_Measurement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PARAM_NAME
		{
			get
			{
				return this._PARAM_NAME;
			}
			set
			{
				if ((this._PARAM_NAME != value))
				{
					this._PARAM_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this._UNIT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MLOC_NAME
		{
			get
			{
				return this._MLOC_NAME;
			}
			set
			{
				if ((this._MLOC_NAME != value))
				{
					this._MLOC_NAME = value;
				}
			}
		}
	}
	
	public partial class spLowTenWithDatesResult
	{
		
		private decimal _RES_MEASURE;
		
		private string _UNIT;
		
		private string _PARAM_NAME;
		
		private System.DateTime _RES_DATE_TIME;
		
		private string _MLOC_NAME;
		
		private string _PRJ_NAME;
		
		public spLowTenWithDatesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_MEASURE", DbType="Decimal(20,10) NOT NULL")]
		public decimal RES_MEASURE
		{
			get
			{
				return this._RES_MEASURE;
			}
			set
			{
				if ((this._RES_MEASURE != value))
				{
					this._RES_MEASURE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this._UNIT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PARAM_NAME
		{
			get
			{
				return this._PARAM_NAME;
			}
			set
			{
				if ((this._PARAM_NAME != value))
				{
					this._PARAM_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_DATE_TIME", DbType="DateTime2 NOT NULL")]
		public System.DateTime RES_DATE_TIME
		{
			get
			{
				return this._RES_DATE_TIME;
			}
			set
			{
				if ((this._RES_DATE_TIME != value))
				{
					this._RES_DATE_TIME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MLOC_NAME
		{
			get
			{
				return this._MLOC_NAME;
			}
			set
			{
				if ((this._MLOC_NAME != value))
				{
					this._MLOC_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRJ_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRJ_NAME
		{
			get
			{
				return this._PRJ_NAME;
			}
			set
			{
				if ((this._PRJ_NAME != value))
				{
					this._PRJ_NAME = value;
				}
			}
		}
	}
	
	public partial class spTopTenWithDatesResult
	{
		
		private decimal _RES_MEASURE;
		
		private string _UNIT;
		
		private string _PARAM_NAME;
		
		private System.DateTime _RES_DATE_TIME;
		
		private string _MLOC_NAME;
		
		private string _PRJ_NAME;
		
		public spTopTenWithDatesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_MEASURE", DbType="Decimal(20,10) NOT NULL")]
		public decimal RES_MEASURE
		{
			get
			{
				return this._RES_MEASURE;
			}
			set
			{
				if ((this._RES_MEASURE != value))
				{
					this._RES_MEASURE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this._UNIT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PARAM_NAME
		{
			get
			{
				return this._PARAM_NAME;
			}
			set
			{
				if ((this._PARAM_NAME != value))
				{
					this._PARAM_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_DATE_TIME", DbType="DateTime2 NOT NULL")]
		public System.DateTime RES_DATE_TIME
		{
			get
			{
				return this._RES_DATE_TIME;
			}
			set
			{
				if ((this._RES_DATE_TIME != value))
				{
					this._RES_DATE_TIME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLOC_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MLOC_NAME
		{
			get
			{
				return this._MLOC_NAME;
			}
			set
			{
				if ((this._MLOC_NAME != value))
				{
					this._MLOC_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRJ_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRJ_NAME
		{
			get
			{
				return this._PRJ_NAME;
			}
			set
			{
				if ((this._PRJ_NAME != value))
				{
					this._PRJ_NAME = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
